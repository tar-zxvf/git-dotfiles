;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by `savehist'.

(setq savehist-minibuffer-history-variables '(bookmark-history compile-history tmphist org-refile-history string-rectangle-history tmm--history read-expression-history ido-buffer-history buffer-name-history file-name-history woman-topic-history shell-command-history ido-file-history ivy-history swiper-history extended-command-history org-tags-history org-read-date-history evil-ex-history minibuffer-history))
(setq compile-history '("make -k "))
(setq org-refile-history '("Tasks"))
(setq string-rectangle-history '("TODO " "TODO"))
(setq tmm--history '("f==>File" "e==>Edit" "O==>Options" "b==>Buffers" "0==>Tools" "o==>Org" "T==>Tbl" "t==>Text" "y==>YASnippet" "h==>Help" "f==>File" "e==>Edit" "O==>Options" "b==>Buffers" "0==>Tools" "o==>Org" "T==>Tbl" "t==>Text" "y==>YASnippet" "h==>Help" "f==>File" "e==>Edit" "O==>Options" "b==>Buffers" "0==>Tools" "o==>Org" "T==>Tbl" "t==>Text" "y==>YASnippet" "h==>Help" "f==>File" "e==>Edit" "O==>Options" "b==>Buffers" "0==>Tools" "o==>Org" "T==>Tbl" "t==>Text" "y==>YASnippet" "h==>Help"))
(setq read-expression-history '("q"))
(setq ido-buffer-history '("*Ediff Registry*" "*Compile-Log*" "*info*" "*Snake*"))
(setq buffer-name-history '("*Customize Option: Org Capture Templates*" "*Srefactor Menu*" "*Customize Option: Org Capture Templates*" "*Ediff Registry*" "*Compile-Log*" "*info*" "*Snake*" "*Packages*" "*Customize Option: Eww Search Prefix*" "*Customize Group: Eww*"))
(setq file-name-history '("d:/MyGithub/git-org/left-todo-only.org" "d:/MyTool/emacs/bin/Dgtd.org" "d:/MyGithub/git-org/dailySpacemacs.org" "d:/MyGithub/git-org/dailyWork.org" "d:/MyGithub/git-org/dailySpacemacs.org_archive" "d:/MyGithub/git-org/apireturn.org" "d:/MyGithub/git-org/dailyInterview.org" "~/.spacemacs" "d:/MyGithub/git-org/今日头条笔试.org" "d:/MyGithub/git-org/org-html.html" "d:/MyGithub/git-org/dailyLife.org" "~/.notes" "d:/MyGithub/git-learn/dailySpacemacs.org" "d:/MyGithub/git-learn/dailyWork.org" "d:/MyGithub/git-dotfiles/README.md" "d:/MyGithub/git-learn/find-work-information.org" "d:/MyGithub/git-learn/dailyLife.org" "~/.emacs.d/contrib/auto-completion/packages.el" "~/.emacs.d/contrib/auto-completion/README.org" "d:/MyTool/emacs/share/emacs/24.5/etc/COPYING" "d:/MyGithub/git-learn/findowrk.org" "d:/MyGithub/git-learn/left-todo-only.org" "~/.emacs.d/core/templates/.spacemacs.template" "~/.emacs.d/init.el" "~/.emacs.d/README.md" "d:/MyGithub/git-learn/sunday.org"))
(setq shell-command-history '("pwd" "cd e:" "pwd" "cd c:"))
(setq ido-file-history '(nil "." "findowrk.org"))
(setq ivy-history '(#("save-buffer" 0 11 (ivy-index 11)) #("global-auto" 0 11 (ivy-index 0)) #("global-compan" 0 13 (ivy-index 3)) #("global-comp" 0 11 (ivy-index 1)) #("global compan" 0 13 (ivy-index 0)) #("global-com" 0 10 (ivy-index 3))))
(setq extended-command-history '("evil-ex-nohighlight" "file-notify-handle-event" "new-frame" "spacemacs-buffer/goto-link-line" "kill-buffer" "remember" "kill-buffer" "org-remove-file" "new-frame" "evil-jumper-mode" "smex-major-mode-commands" "ace-jump-move" "spacemacs/jump-in-buffer" "ace-jump-move" "bookmark-jump" "jump-to-register" "ace-jump-move" "ace-jump-mode" "spacemacs/org-bold" "compile-defun" "c++-mode" "makefile-mode" "compile" "kill-buffer" "srefactor-refactor-at-point" "c++-mode" "new-empty-buffer" "smex-major-mode-commands" "mail-abbrev-insert-alias" "c++-mode" "new-empty-buffer" "c++-mode" "new-empty-buffer" "c-c++-menu" "smex-major-mode-commands" "c++-mode" "new-empty-buffer" "make-directory" "new-empty-buffer" "spacemacs/org-bold" "smex-major-mode-commands" "python-skeleton-def" "smex-major-mode-commands" "find-file" "python-mode" "new-empty-buffer" "smex-major-mode-commands" "package-list-packages" "window-numbering-mode" "new-frame" "shell" "remember" "org-mode" "remember" "org-mode" "remember-mode" "org-mode" "remember-notes" "find-file" "new-frame" "save-buffer" "org-mode" "new-empty-buffer" "spacemacs/org-bold" "font-show-log" "org-mode" "new-empty-buffer" "new-frame" "spacemacs/org-code" "org-mode" "new-empty-buffer" "org-ctrl-c-minus" "find-file" "whois" "remember" "kill-buffer" "org-capture" "find-file" "org-capture" "helm-org-capture-templates" "org-capture" "org-mode" "org-capture-mode" "kill-buffer" "org-capture" "toggle-frame-maximized" "minimize-window" "maximize-window" "new-frame" "evil-window-new" "window-numbering-mode" "Buffer-menu-view-other-window" "org-pomodoro" "calendar" "org-agenda-goto-calendar" "org-goto-calendar" "org-date-from-calendar" "org-calendar-goto-agenda" "org-agenda-goto-calendar" "org-calendar-select" "org-pomodoro" "recover-file" "org-pomodoro" "recover-file" "org-pomodoro" "recover-file" "org-edit-agenda-file-list" "org-agenda-file-to-front" "helm-org-agenda-files-headings" "org-agenda" "calendar" "org-date-from-calendar" "org-calendar-select" "find-file" "recover-file" "org-toggle-checkbox" "string-insert-rectangle" "org-mode" "doc-view-mode" "org-pomodoro" "set-mark-command" "remember-clipboard" "remember-buffer" "remember" "find-file" "ediff" "move-file-to-trash" "whois" "ediff" "ediff-files3" "ediff" "shell" "ediff" "find-file" "shell" "org-toggle-checkbox" "org-reset-checkbox-state-subtree" "org-toggle-checkbox" "find-file" "shell" "recover-file" "toggle-truncate-lines" "find-file" "recover-file" "snake-start-game" "snake" "find-file" "ediff" "scroll-up" "kill-buffer" "package-list-packages-no-fetch" "kill-buffer" "package-show-package-list" "kill-buffer" "package-list-packages" "ido-display-buffer" "find-file" "ido-dired" "ido-mode" "org-clock-in" "spacemacs/org-bold" "org-set-tags" "find-file" "org-pomodoro-extend-last-clock" "org-pomodoro" "whois" "kill-buffer" "eww" "emacs-version" "eww" "eww-mode" "eww" "dired" "ido-dired" "dired" "find-file" "dired" "dired-goto-file" "dired-find-file" "dired-tree-up" "dired" "dired-jump" "server-start" "find-file" "rename-file" "find-file" "rename-file" "toggle-truncate-lines" "find-file" "save-buffer" "org-sparse-tree" "org-pomodoro" "org-timer-stop" "org-timer-start" "org-time-stamp" "erase-buffer" "org-time-stamp" "org-timer-set-timer" "org-sparse-tree" "find-alternate-file" "recover-file" "find-alternate-file" "recover-file" "spacemacs/org-bold" "spacemacs/org-code" "org-sparse-tree" "recover-file" "org-clock-cancel" "org-clock-out" "org-clock-in" "org-clock-cancel" "org-clock-out" "org-clock-in" "org-clock-out" "org-clock-in" "recover-file" "org-insert-todo-heading" "org-insert-subheading" "org-todo" "org-pomodoro" "find-file" "rename-file" "spacemacs/toggle-truncate-lines" "spacemacs/org-bold" "spacemacs/org-italic" "spacemacs/org-bold" "find-file" "spacemacs/org-bold" "spacemacs/org-underline" "spacemacs/org-bold" "spacemacs/org-italic" "spacemacs/org-bold" "find-file" "org-match-sparse-tree" "find-file" "dired-jump" "toggle-truncate-lines" "evil-window-set-width" "save-buffer" "company-mode" "customize-themes" "widen" "rename-file" "version"))
(setq org-tags-history '("abnf" "work issue" "xunfei semantics" "usualy used" "#a" "spacemacs" "org" "later on" "#A" "#a" "TODO" "spacemacs" "todo" "spacemacs" "spacemacs"))
(setq org-read-date-history '("23:00    " "+1    " "   " "+4d    " "   " "09:27    " "   " "17:47    " "   " "    " "   " "14:18    " "13:50    " "   " "10:34    " "9:53    " "19:48    "))
(setq evil-ex-history '(#("w" 0 1 (ex-index 1)) #("noh" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("saveas Dgtd.org" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("saveas apireturn.org" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20)) #("w" 0 1 (ex-index 1)) #("saveas 今日头条笔试.org" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wa" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 2178)) #("w" 0 1 (ex-index 1)) #("set nu" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("wa" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1))))
(setq minibuffer-history '("left-to" #("index" 0 5 (fontified t line-prefix #("***** " 0 5 (face org-indent)) wrap-prefix #("*****          " 0 15 (face org-indent)) face (org-list-dt))) "D" "Mongo db 与mysql 语法比较" "http://www.cnblogs.com/xffy1028/archive/2011/12/03/2272837.html" "noh" "daiw" #("*" 0 1 (fontified t composition (0 1 [9673]) keymap (keymap (mouse-1 . org-cycle) (mouse-2 lambda (e) (interactive "e") (mouse-set-point e) (org-cycle))) face org-level-1 line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)))) #("capture" 0 7 (fontified t line-prefix #("*" 0 1 (face org-hide)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2 org-category "dailySpacemacs")) "Dorg" "dais" "dailyw" #("**" 0 1 (keymap (keymap (mouse-1 . org-cycle) (mouse-2 lambda (e) (interactive "e") (mouse-set-point e) (org-cycle))) face (:foreground "#292b2e") org-stats 0 org-category "dailyWork" wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-hide)) fontified t) 1 2 (face org-level-2 keymap (keymap (mouse-1 . org-cycle) (mouse-2 lambda (e) (interactive "e") (mouse-set-point e) (org-cycle))) composition (1 1 [9675]) org-stats 0 org-category "dailyWork" wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-hide)) fontified t)) "c:/use" "daily" "d" "5" "org-clock-in" "org-clock-out" "C-c C-x C-" "remem" "org-remove-file" #("***" 0 2 (keymap (keymap (mouse-1 . org-cycle) (mouse-2 lambda (e) (interactive "e") (mouse-set-point e) (org-cycle))) face (:foreground "#292b2e") wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-hide)) org-category "dailySpacemacs" fontified t) 2 3 (face org-level-3 keymap (keymap (mouse-1 . org-cycle) (mouse-2 lambda (e) (interactive "e") (mouse-set-point e) (org-cycle))) composition (2 1 [10040]) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-hide)) org-category "dailySpacemacs" fontified t)) "_ar" "org-agenda-files" #("d" 0 1 (wrap-prefix #("*****      " 0 11 (face org-indent)) line-prefix #("***** " 0 5 (face org-indent)) fontified t)) "org-deadlin" "org-dead" "deadlin" #("scrapy" 0 6 (face org-level-2 org-stats 0 org-category "dailyWork" wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-hide)) fontified t)) "org-sch" "apiru" "dailywo" #("**" 0 1 (fontified t line-prefix #("*" 0 1 (face org-hide)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) org-category "dailyWork" org-stats 0 face (:foreground "#292b2e") keymap (keymap (mouse-1 . org-cycle) (mouse-2 lambda (e) (interactive "e") (mouse-set-point e) (org-cycle)))) 1 2 (fontified t line-prefix #("*" 0 1 (face org-hide)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) org-category "dailyWork" org-stats 0 composition (0 1 [9675]) keymap (keymap (mouse-1 . org-cycle) (mouse-2 lambda (e) (interactive "e") (mouse-set-point e) (org-cycle))) face org-level-2)) "dgtd" "org" ", :" "org-set-t" "dialyw" "evil-ace-jump" "evil-ace-jump-" "evil-ace-jump-word-mode" "evil-ace-jump" "daily" "evil-ace-jump-lin" "evil-ace-jump-word" "evil-ace-jump" "ace-jump-" "ace-jump-jump-to" "ace-jump-move" "ace-jump" "evil-jump" "ace-jump-" "jump-mode" "jump-in" "ace-jump-char" "ace-jump-ch" "evil-jump-" "evil-jump" "left" "daispa" "evil-jump-" "evil-jump" "jump" "dailyspace" "ace-jum" "dailyinter" "dgtd" ".sp" ".space" "make-dire" "d:/Documents/GitHub/CPPLessons" "d:/Documents/githu" "d:/docu" ".spac" "build" "smex-m" "spacemacs/smex" "major-mode-" "smex-ma" "api" "dailyw" "api" "daily" "api" "reme" "daily" "remember-notes" "remember-" "remember" "left" "dailyw" "api" "daily" "dailyspace" "intervie" "api" "daiw" "今日" "save-bu" "d:/MyGithub/git-org/first-learn-org.org" "目录位置" "返回目录" "目录位置" "file:c:/windows/desktop.ini" "mylife.o" #("<2015-09-16" 0 11 (org-stats 50 org-category "dailyWork" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-date wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t)) "save-buffer" "#get_loc_id" "http://api-dev.lvxingpai.com/app/search?keyword=北京&loc=true" "left" "dailys" ".notes_" "." "left" "leftto" "ds" "c:/Users/Administrator/.no" "whois" "org" "dailys" "dailywo" #("org" 0 3 (wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" face org-level-1 fontified t)) "buffer" "j" "reme" ".space" "org-cap" ".spac" "dailw" "c:/Users/Administrator/test.notes" ".space" "me" "mess" "org-cap" "frame-max" #("important" 0 9 (fontified t face org-level-1 line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)))) "dailife" "dail" "calendar" "org-calendar" "jjjj" "" #("File" 0 1 (mouse-face highlight help-echo #("mouse-2: Go to node emacs.info" 20 30 (mouse-face highlight font-lock-face info-header-xref)) keymap (keymap (follow-link . mouse-face) (mouse-2 . Info-mouse-follow-link) (header-line keymap (mouse-2 . Info-mouse-follow-link) (mouse-1 . mouse-select-window) (down-mouse-1 . mouse-drag-header-line))) link-args file header-line #("Prev: Variable Index,  Up: Top" 0 6 (mouse-face highlight help-echo #("mouse-2: Go to node Variable Index" 20 34 (mouse-face highlight font-lock-face info-header-xref)) keymap (keymap (follow-link . mouse-face) (mouse-2 . Info-mouse-follow-link) (header-line keymap (mouse-2 . Info-mouse-follow-link) (mouse-1 . mouse-select-window) (down-mouse-1 . mouse-drag-header-line))) link-args prev) 6 20 (font-lock-face info-header-xref mouse-face highlight help-echo #("mouse-2: Go to node Variable Index" 20 34 (mouse-face highlight font-lock-face info-header-xref)) keymap (keymap (follow-link . mouse-face) (mouse-2 . Info-mouse-follow-link) (header-line keymap (mouse-2 . Info-mouse-follow-link) (mouse-1 . mouse-select-window) (down-mouse-1 . mouse-drag-header-line))) link-args prev) 23 27 (mouse-face highlight help-echo #("mouse-2: Go to node Top" 20 23 (mouse-face highlight font-lock-face info-header-xref)) keymap (keymap (follow-link . mouse-face) (mouse-2 . Info-mouse-follow-link) (header-line keymap (mouse-2 . Info-mouse-follow-link) (mouse-1 . mouse-select-window) (down-mouse-1 . mouse-drag-header-line))) link-args up) 27 30 (font-lock-face info-header-xref mouse-face highlight help-echo #("mouse-2: Go to node Top" 20 23 (mouse-face highlight font-lock-face info-header-xref)) keymap (keymap (follow-link . mouse-face) (mouse-2 . Info-mouse-follow-link) (header-line keymap (mouse-2 . Info-mouse-follow-link) (mouse-1 . mouse-select-window) (down-mouse-1 . mouse-drag-header-line))) link-args up))) 1 4 (mouse-face highlight help-echo #("mouse-2: Go to node emacs.info" 20 30 (mouse-face highlight font-lock-face info-header-xref)) keymap (keymap (follow-link . mouse-face) (mouse-2 . Info-mouse-follow-link) (header-line keymap (mouse-2 . Info-mouse-follow-link) (mouse-1 . mouse-select-window) (down-mouse-1 . mouse-drag-header-line))) link-args file)) "some keybinding:" "*some keybinding:" "some keybinding:" "find mytarget" "mytarget" "baidu" "www.baidu.com" "dfjslka" "lindkjflska" "string" "nil" "1" "sl" "d:/MyGithub/git-org/" "dailys" "d:/MyGithub/git-org/" "dailys" "d:/MyGithub/git-org/" "org-cap" "dais" "left" "d:/MyGithub/git-org/" "org-edit-ag" #("function" 0 8 (wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-hide)) face org-level-2 fontified t)) "dais" "Quit" "mess" "d:/MyGithub/git-org/dailys" "d:/MyGithub/git-org/" "daiw" "d:/MyGithub/git-org/" "dw" #("**" 0 1 (keymap (keymap (mouse-1 . org-cycle) (mouse-2 lambda (e) (interactive "e") (mouse-set-point e) (org-cycle))) face (:foreground "#292b2e") org-todo-head "TODO" wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-hide)) fontified t) 1 2 (face org-level-2 keymap (keymap (mouse-1 . org-cycle) (mouse-2 lambda (e) (interactive "e") (mouse-set-point e) (org-cycle))) composition (1 1 [9675]) org-todo-head "TODO" wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-hide)) fontified t)) #("done" 0 4 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-hide)) fontified t)) "org-set-tag" "org-toggle-che" "org-toggle-chec" "daiw" #("**" 0 1 (keymap (keymap (mouse-1 . org-cycle) (mouse-2 lambda (e) (interactive "e") (mouse-set-point e) (org-cycle))) face (:foreground "#292b2e") wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-hide)) fontified t) 1 2 (face org-level-2 keymap (keymap (mouse-1 . org-cycle) (mouse-2 lambda (e) (interactive "e") (mouse-set-point e) (org-cycle))) composition (1 1 [9675]) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-hide)) fontified t)) "daiwork" "dw" "block" "left" "remember" "daiw" "reme" "dai" "daiw" "d:/MyGithub/git-org/" "d:/MyGithub/gio" "d:/MyGithub/git-learn/ds" "d:/mygit" "d:/MyGithub/git-l" "d:/MyGithub/git-org/dw" "d:/MyGithub/git-le" "d:/MyGithub/git-org/ds" "d:/MyGithub/git" "d:/MyGithub/git-learn/dw" #("**" 0 1 (keymap (keymap (mouse-1 . org-cycle) (mouse-2 lambda (e) (interactive "e") (mouse-set-point e) (org-cycle))) face (:foreground "#292b2e") fontified t wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-hide))) 1 2 (face org-level-2 keymap (keymap (mouse-1 . org-cycle) (mouse-2 lambda (e) (interactive "e") (mouse-set-point e) (org-cycle))) composition (1 1 [9675]) fontified t wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-hide)))) "dailysp" "d:/MyGithub/" "d:/MyGithub/git-org/" "checkbox" "d:/MyGithub/git-org/left" "dailyspace" "diw" "d:/MyGithub/git-learn/" "java-mode" "dailys" "toggle-trun" "d:/MyGithub/git-org/daili" "d:/MyGithub/git-learn/" "dais" "d:/MyGithub/git-learn/" "dailyI" "snake-move" "snake" "snak" "dw" "d:/MyGithub/git-org" "dais" "d:/MyGithub/gitor" "d:/MyGithub/LCpp-org-future/Principle.org" "cpp" "make-dire" "mess" "d:/MyGithub/LCpp-org-future/L01/new.cpp" "dw" "daisp" "package-install" "55" "org-cl" ".sp" ".s" "dailys" "dw" ".s" "confi" ".sp" "ds" "daw" "mess" "d:/MyGithub/git-org/learn-git.md" #("emacs-lisp" 0 10 (fontified t)) "  " ".spac" "d:/MyGithub/gito" #("frequency" 0 9 (wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-hide)) face org-level-2 fontified t)) "eww" "www.baidu.com" "www.sina.com" "daiw" "emacs" "www.baidu.com" "c:/" "d:/.." "dailys" "d:/MyGithub/git-learn/" "fnd" "daiw" "d:/MyGithub/git-learn/LeftLive.org" "d:/MyGithub/git-learn/dl" "d:/MyGithub/git-learn/dailyLife.org" "dais" "auto-completion" "auto-comp" "." "hippi" "hippie" "hippie-" #("dotspacemacs-themes" 0 19 (fontified t)) ".spa" "hippie-exp" "d" "d:/MyGithub/git-learn/dw" "d:/MyGithub/git-learn/ds" "d:/MyGithub/git-learn/dw" ".spa" ".space" "d:/MyGithub/git-learn/dw" #("**" 0 1 (keymap (keymap (mouse-1 . org-cycle) (mouse-2 lambda (e) (interactive "e") (mouse-set-point e) (org-cycle))) face (:foreground "#292b2e") wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-hide)) fontified t) 1 2 (face org-level-2 keymap (keymap (mouse-1 . org-cycle) (mouse-2 lambda (e) (interactive "e") (mouse-set-point e) (org-cycle))) composition (2 1 [9675]) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-hide)) fontified t)) "univers" "universal-ar" "spc u" "C-u C-c ." "d:/MyGithub/git-learn/ds" "dais" #("18>" 0 2 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-date mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse))) 2 3 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face org-date mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)))) "ds" "d:/MyGithub/git-learn/find-work-information.org" "d:/MyGithub/git-learn/" "d:/MyGithub/git-learn/find-work-information" "d:/MyGithub/git-learn/find" "find" "daiw" "spacemacs/toggle-trun" ".s" ".space" ".sp" "dais" ".spa" "d:/MyGithub/git-learn/ds" ".space" "orgsparst" "d:/MyGithub/git-learn/dai" "ff" "dired" "daiw" "dai" "truncate-partial-width-windows" ".spacem" "toggle-tr" "org-publ" #("我们在进行的工作包括，" 0 11 (fontified t wrap-prefix #("* " 0 2 (face org-indent)) line-prefix #("* " 0 1 (face org-indent)))) "toggle-trunc" #("3，机器学习算法应用于广告：研究各类机器学习算法，应用无监督挖掘、半监督/有监督的机器学习、异常检测、用户行为建模、订单跟踪、rule-base、model-base的大数据处理算法。" 0 92 (fontified t wrap-prefix #("* " 0 2 (face org-indent)) line-prefix #("* " 0 1 (face org-indent)))) #("京东数字营销业务部成立于2014年初，部门主要负责两个任务，给京东引流和把京东的流量变现。引流就是在网上打广告，引导用户去京东买东西。变现就是给京东平台上的商家和京东的供货商、品牌商提供广告营销服务。所以，我们数字营销业务部的业务范围覆盖了在线广告的各个环节，包括效果广告、品牌广告、搜索广告、展示广告、DSP、AdExchange。我们致力于打造世界一流的电商广告及营销平台，我们的产品京准通" 0 197 (fontified t wrap-prefix #("* " 0 2 (face org-indent)) line-prefix #("* " 0 1 (face org-indent)))) "setwidth" "width" "findfile" ".spa" "dw" "saveb" "dais" "todo" "daily" #("question" 0 8 (face org-level-2 fontified t)) "company-mo" "dailw" "Among the stars aboard the Evil flagship (vim)" ".pa" "Among the stars aboard the Evil flagship (vim)" #("mwe-log-commands" 0 16 (fontified t)) #("colors" 0 6 (fontified t)) #("mwe-log-commands" 0 16 (fontified t)) "daily" "Among the stars aboard the Evil flagship (vim)" "findf" "Among the stars aboard the Evil flagship (vim)" #("remote" 0 6 (face org-level-3 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-hide)) fontified t)) "da" ".sp" "dailw" #("commands" 0 8 (face font-lock-comment-face fontified t)) "dais" "w" "dailysp" "daisp" "find" "c:/Users/Administrator/.emacs.d/read" "find" #("org" 0 3 (wrap-prefix #("        " 0 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) "dailysp" "orgset-ta" "ds" "spac" "ds" #("extensions" 0 10 (face font-lock-comment-face fontified t)) "spa" "org-set-tas" "ds" #("1/5" 0 3 (face org-checkbox-statistics-todo fontified t)) "dw" "ds" "dw" "ds" "d:/MyGithub/git-learn/dw" #("2/8" 0 3 (face org-checkbox-statistics-todo fontified t)) "w" "d:/MyGithub/git-learn/ds" "ff" "d:/MyGithub/git-learn/le" "find" "d:/MyGithub/git-learn/left-todo-only.org" "d:/MyGithub/git-learn/sunday.org" "ren" "d:/MyGithub/git-learn/s" "d:/mygit" "rename" "d:/MyGithub/git-learn/" "find" "rename" "d:/mygit" "findf" "version" "findf" "findfi"))
(setq mark-ring 'nil)
(setq search-ring 'nil)
(setq regexp-search-ring '("aliases" "post" "integer" "dynamic" "\\<basic\\>" "elasticsearch" "analy" ".notes" "spc m ," "agend" "\\<SCHEDULED\\>" ",t" "later" "apireturn" "\\<'$_ti_ch_'\\>" "wild character"))
(setq extended-command-history '("evil-ex-nohighlight" "file-notify-handle-event" "new-frame" "spacemacs-buffer/goto-link-line" "kill-buffer" "remember" "kill-buffer" "org-remove-file" "new-frame" "evil-jumper-mode" "smex-major-mode-commands" "ace-jump-move" "spacemacs/jump-in-buffer" "ace-jump-move" "bookmark-jump" "jump-to-register" "ace-jump-move" "ace-jump-mode" "spacemacs/org-bold" "compile-defun" "c++-mode" "makefile-mode" "compile" "kill-buffer" "srefactor-refactor-at-point" "c++-mode" "new-empty-buffer" "smex-major-mode-commands" "mail-abbrev-insert-alias" "c++-mode" "new-empty-buffer" "c++-mode" "new-empty-buffer" "c-c++-menu" "smex-major-mode-commands" "c++-mode" "new-empty-buffer" "make-directory" "new-empty-buffer" "spacemacs/org-bold" "smex-major-mode-commands" "python-skeleton-def" "smex-major-mode-commands" "find-file" "python-mode" "new-empty-buffer" "smex-major-mode-commands" "package-list-packages" "window-numbering-mode" "new-frame" "shell" "remember" "org-mode" "remember" "org-mode" "remember-mode" "org-mode" "remember-notes" "find-file" "new-frame" "save-buffer" "org-mode" "new-empty-buffer" "spacemacs/org-bold" "font-show-log" "org-mode" "new-empty-buffer" "new-frame" "spacemacs/org-code" "org-mode" "new-empty-buffer" "org-ctrl-c-minus" "find-file" "whois" "remember" "kill-buffer" "org-capture" "find-file" "org-capture" "helm-org-capture-templates" "org-capture" "org-mode" "org-capture-mode" "kill-buffer" "org-capture" "toggle-frame-maximized" "minimize-window" "maximize-window" "new-frame" "evil-window-new" "window-numbering-mode" "Buffer-menu-view-other-window" "org-pomodoro" "calendar" "org-agenda-goto-calendar" "org-goto-calendar" "org-date-from-calendar" "org-calendar-goto-agenda" "org-agenda-goto-calendar" "org-calendar-select" "org-pomodoro" "recover-file" "org-pomodoro" "recover-file" "org-pomodoro" "recover-file" "org-edit-agenda-file-list" "org-agenda-file-to-front" "helm-org-agenda-files-headings" "org-agenda" "calendar" "org-date-from-calendar" "org-calendar-select" "find-file" "recover-file" "org-toggle-checkbox" "string-insert-rectangle" "org-mode" "doc-view-mode" "org-pomodoro" "set-mark-command" "remember-clipboard" "remember-buffer" "remember" "find-file" "ediff" "move-file-to-trash" "whois" "ediff" "ediff-files3" "ediff" "shell" "ediff" "find-file" "shell" "org-toggle-checkbox" "org-reset-checkbox-state-subtree" "org-toggle-checkbox" "find-file" "shell" "recover-file" "toggle-truncate-lines" "find-file" "recover-file" "snake-start-game" "snake" "find-file" "ediff" "scroll-up" "kill-buffer" "package-list-packages-no-fetch" "kill-buffer" "package-show-package-list" "kill-buffer" "package-list-packages" "ido-display-buffer" "find-file" "ido-dired" "ido-mode" "org-clock-in" "spacemacs/org-bold" "org-set-tags" "find-file" "org-pomodoro-extend-last-clock" "org-pomodoro" "whois" "kill-buffer" "eww" "emacs-version" "eww" "eww-mode" "eww" "dired" "ido-dired" "dired" "find-file" "dired" "dired-goto-file" "dired-find-file" "dired-tree-up" "dired" "dired-jump" "server-start" "find-file" "rename-file" "find-file" "rename-file" "toggle-truncate-lines" "find-file" "save-buffer" "org-sparse-tree" "org-pomodoro" "org-timer-stop" "org-timer-start" "org-time-stamp" "erase-buffer" "org-time-stamp" "org-timer-set-timer" "org-sparse-tree" "find-alternate-file" "recover-file" "find-alternate-file" "recover-file" "spacemacs/org-bold" "spacemacs/org-code" "org-sparse-tree" "recover-file" "org-clock-cancel" "org-clock-out" "org-clock-in" "org-clock-cancel" "org-clock-out" "org-clock-in" "org-clock-out" "org-clock-in" "recover-file" "org-insert-todo-heading" "org-insert-subheading" "org-todo" "org-pomodoro" "find-file" "rename-file" "spacemacs/toggle-truncate-lines" "spacemacs/org-bold" "spacemacs/org-italic" "spacemacs/org-bold" "find-file" "spacemacs/org-bold" "spacemacs/org-underline" "spacemacs/org-bold" "spacemacs/org-italic" "spacemacs/org-bold" "find-file" "org-match-sparse-tree" "find-file" "dired-jump" "toggle-truncate-lines" "evil-window-set-width" "save-buffer" "company-mode" "customize-themes" "widen" "rename-file" "version"))
